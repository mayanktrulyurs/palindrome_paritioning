class Solution {
public:
    
    bool isPalindrome(int start, int end, string &s){
        while (start<=end){
            if (s[start++]!=s[end--]){
                return false;
            }
        }
        return true;
    }
    
    void f(int idx, string &s, vector<string>& temp, vector<vector<string>>& ans){
        
        if (idx==s.size()){
            ans.push_back(temp);
            return;
        }
        
        for (int i=idx;i<s.size();i++){
            
            if (isPalindrome(idx,i,s)){
                
                temp.push_back(s.substr(idx,i-idx+1));
                
                f(i+1,s,temp,ans);
                
                temp.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        
        vector<string>temp;
        vector<vector<string>>ans;
        
        f(0,s,temp,ans);
        
        return ans;
    }
};